{"version":3,"sources":["serviceWorker.ts","models/FundInfo.ts","models/FundDetails.ts","components/MenuAppBar.tsx","components/Revenue.tsx","components/FundPicker/FundItem.tsx","components/FundPicker/FundInfoItem.tsx","components/FundPicker/FundPicker.tsx","components/FundTable.tsx","components/FundView.tsx","Main.tsx","AppLoader.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","FundInfo","company","funds","this","FundDetail","name","currentValue","dailyPercentage","yearlyPercentage","useStyles","makeStyles","theme","createStyles","root","flexGrow","appbar","backgroundColor","position","height","title","textAlign","link","color","textDecoration","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","handleClose","className","AppBar","Toolbar","Typography","variant","IconButton","edge","onClick","event","currentTarget","aria-label","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","to","Revenue","fund","paddingLeft","spacing","select","palette","text","primary","FundItem","hasHover","onAdd","ListItem","button","ListItemIcon","ListItemText","style","display","FundInfoItem","fundInfo","onAddFund","hoveredFund","setHoveredFund","setOpen","resetHoveredFund","fundName","key","map","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","onMouseEnter","onMouseLeave","width","maxWidth","background","paper","overflowY","FundPicker","allFunds","aria-labelledby","subheader","ListSubheader","index","StyledTableCell","withStyles","head","common","black","white","fontSize","body","TableCell","StyledTableRow","default","TableRow","createData","shares","rows","borderLeft","table","minWidth","FundTable","Paper","Table","TableHead","align","TableBody","row","scope","FundView","overflow","maxHeight","props","c","f","console","log","Main","exact","path","render","AppLoader","document","Document","topElement","createElement","jsonData","JSON","stringify","data","pages","parse","allContent","length","push","content","element","insertAdjacentHTML","appendChild","rootElements","getElementsByClassName","j","childElementCount","children","innerHTML","trim","addFundInfo","fundDetail","getFundDetails","sort","a","b","x","toLowerCase","y","Container","marginTop","fundInfos","findIndex","item","concat","elements","fundHeading","getFundNameAndValue","Number","heading","getElementsByTagName","pos","decimals","charAt","isNumeric","value","slice","aPos","indexOf","isNaN","parseFloat","isFinite","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.326a4b1b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IFundDetail } from \".\";\n\nexport interface IFundInfo {\n    company: string\n    funds: IFundDetail[];\n}\n\nexport class FundInfo implements IFundInfo {\n    public company: string\n    public funds: IFundDetail[];\n    constructor(company: string) {\n        this.company = company\n        this.funds = []\n    }\n}","export interface IFundDetail {\n    name: string;\n    currentValue: number\n    dailyPercentage: number\n    yearlyPercentage: number\n}\n\nexport class FundDetail implements IFundDetail {\n    public name: string;\n    public currentValue: number\n    public dailyPercentage: number\n    public yearlyPercentage: number\n\n    constructor(name: string, currentValue: number) {\n        this.name = name\n        this.currentValue = currentValue\n        this.dailyPercentage = 0\n        this.yearlyPercentage = 0\n    }\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    appbar: {\n      backgroundColor: 'blue',\n      position: 'fixed',\n      height: '5vh'\n    },\n    title: {\n        textAlign: \"center\",\n      flexGrow: 1,\n    },\n    link: {\n        color: \"rgba(0, 0, 0, 0.87)\",\n        textDecoration: \"none\",\n    }\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  function handleMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appbar} >\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Fondkollen\n          </Typography>\n          <div>\n          <IconButton edge=\"end\" onClick={handleMenu} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                <NavLink className={classes.link} to={'/funds'}>Mina Fonder...</NavLink>\n                </MenuItem>\n              </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import * as React from 'react'\n\nexport class Revenue extends React.Component {\n    public render() {\n        return <div>Revenue</div>\n    }\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LocalAtm from '@material-ui/icons/LocalAtm';\nimport { IFundDetail } from '../../models/FundDetails';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        fund: {\n            paddingLeft: theme.spacing(4),\n            color: 'green',\n            '&:hover': {\n                color: 'darkgreen',\n            }\n        },\n        select: {\n            color: theme.palette.text.primary\n        }\n    }),\n);\n\nexport interface IFundItemProps {\n    fund: IFundDetail;\n    hasHover: boolean\n    onAdd(fundName: string): void;\n}\n\nexport const FundItem: React.FunctionComponent<IFundItemProps> = ({ fund, hasHover, onAdd }) => {\n    const classes = useStyles();\n\n    return (\n\n        <ListItem button className={classes.fund} onClick={() => onAdd(fund.name)}>\n            <ListItemIcon>\n                <LocalAtm />\n            </ListItemIcon>\n            <ListItemText primary={fund.name} />\n            <div className={classes.select} style={{ display: hasHover ? 'flex' : 'none' }}>VÄLJ</div>\n        </ListItem>\n\n\n    );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { List } from '@material-ui/core';\nimport { IFundInfo } from '../../models';\nimport { FundItem } from './FundItem';\n\nexport interface IFundInfoItemProps {\n    fundInfo: IFundInfo;\n    onAddFund(compmany: string, fundName: string): void;\n}\n\nexport const FundInfoItem: React.FunctionComponent<IFundInfoItemProps> = ({ fundInfo, onAddFund }) => {\n    const [hoveredFund, setHoveredFund] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    const updateHoveredFund = (name: string) => {\n        setHoveredFund(name);\n    }\n\n    const resetHoveredFund = () => {\n        setHoveredFund('')\n    }\n\n    const onAdd = (fundName: string) => {\n        onAddFund(fundInfo.company, fundName)\n    }\n    return (\n\n        <div key={fundInfo.company}>\n            <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                    <BusinessCenterIcon />\n                </ListItemIcon>\n                <ListItemText primary={fundInfo.company} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            {fundInfo.funds.map((fund) => {\n                return (\n                    <Collapse key={fund.name} in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <div onMouseEnter={() => updateHoveredFund(fund.name)} onMouseLeave={resetHoveredFund}>\n                                <FundItem fund={fund} hasHover={fund.name === hoveredFund} onAdd={onAdd} />\n                            </div>\n                        </List>\n                    </Collapse>\n                )\n            })}\n\n        </div>\n\n\n    );\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport { IFundInfo } from '../../models';\nimport { FundInfoItem } from './FundInfoItem';\nimport { Hidden } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      overflowY: 'scroll',\n      // maxHeight: '90vh'\n    },\n  }),\n);\n\nexport interface IFundPickerProps {\n  allFunds: IFundInfo[];\n  onAddFund(company: string, fundName: string): void;\n}\n\nexport const FundPicker: React.FunctionComponent<IFundPickerProps> = ({ allFunds, onAddFund }) => {\n  const classes = useStyles();\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Välj fond\n        </ListSubheader>\n      }\n      className={classes.root}\n    >\n      {allFunds.map((fundInfo: IFundInfo, index) => {\n        return (\n          <FundInfoItem key={index} fundInfo={fundInfo} onAddFund={onAddFund} />\n        )\n      })}\n    </List>\n  );\n}\n","import React from 'react';\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { IFundInfo } from '../models';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n    createStyles({\n        head: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n            fontSize: 14,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n            },\n        },\n    }),\n)(TableRow);\n\nfunction createData(company: string, fund: string, shares: number) {\n    return { company, fund, shares };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', '159', 6.0),\n    createData('Ice cream sandwich', '237', 9.0)\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            borderLeft: '1px solid lightgrey'\n        },\n        table: {\n            minWidth: 700,\n        },\n    }),\n);\n\nexport interface IFundTableProps {\n    funds: Partial<IFundInfo>[]\n}\n\nexport const FundTable: React.FunctionComponent<IFundTableProps> = ({ }) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Fondbolag</StyledTableCell>\n                        <StyledTableCell>Fond</StyledTableCell>\n                        <StyledTableCell align=\"right\">Andelar</StyledTableCell>\n                        <StyledTableCell align=\"right\"></StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <StyledTableRow key={row.company}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.company}\n                            </StyledTableCell>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.fund}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.shares}</StyledTableCell>\n                            <StyledTableCell align=\"right\">\n                                <IconButton aria-label=\"delete\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            </StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n","import * as React from 'react'\nimport { IFundInfo } from '../models'\nimport { FundPicker } from './FundPicker'\nimport { FundTable } from './FundTable'\n\nexport interface IFundViewProps {\n    funds: IFundInfo[];\n}\nexport class FundView extends React.Component<IFundViewProps> {\n    public render() {\n        return (\n            <div style={{ display: 'flex',overflow: 'hidden', maxHeight: '95vh'}}>\n                <FundPicker allFunds={this.props.funds} onAddFund={(c, f) => { console.log(c, f) }} />\n                <FundTable funds={this.props.funds} />\n            </div>\n\n        )\n    }\n}","import * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport { Revenue, FundView } from './components';\nimport { IFundInfo } from './models';\n\nexport interface IMainProps {\n    funds: IFundInfo[];\n}\nexport class Main extends React.Component<IMainProps> {\n\n    public render() {\n        return (\n            <Switch>\n                <Route exact path='/' component={Revenue} />\n                <Route path='/funds' render={(props) => <FundView funds={this.props.funds} />} />\n            </Switch>\n        )\n    }\n}","import * as React from 'react'\nimport * as data from './fonderMock.json';\nimport { MemoryRouter } from 'react-router';\nimport { IFundInfo, FundInfo, IFundDetail, FundDetail } from './models';\nimport { Main } from './Main';\nimport MenuAppBar from './components/MenuAppBar';\nimport Container from '@material-ui/core/Container';\nexport class AppLoader extends React.Component {\n\n\n    private allFunds: IFundInfo[] = [];\n\n    constructor(props: any) {\n        super(props);\n        const document = new Document();\n        const topElement: HTMLElement = document.createElement('rootEl');\n\n        const jsonData = JSON.stringify(data)\n        const fundData = JSON.parse(jsonData)\n        const pages = fundData.default;\n        const allContent = []\n        for (let index = 0; index < pages.length; index++) {\n            allContent.push(pages[index].content);\n        }\n\n        for (let index = 0; index < allContent.length; index++) {\n            const element = allContent[index];\n            topElement.insertAdjacentHTML(\"afterbegin\", element);\n        }\n        document.appendChild(topElement)\n\n        const rootElements = document.getElementsByClassName(\"root\")\n\n\n        for (let index = 0; index < rootElements.length; index++) {\n            const root = rootElements[index];\n\n            let fundInfo = new FundInfo('');\n            for (let j = 0; j < root.childElementCount; j++) {\n                const element = root.children[j];\n                if (element.className === \"G\" && element.innerHTML.trim() !== '') {\n                    if (fundInfo.funds.length > 0) {\n                        this.allFunds = this.addFundInfo(fundInfo, this.allFunds)\n                    }\n                    fundInfo = new FundInfo(element.innerHTML.trim())\n                }\n                if (fundInfo.company && element.className === \"W\" && element.innerHTML.trim() !== '') {\n                    const fundDetail = this.getFundDetails([root.children[j], root.children[j + 1], root.children[j + 2]])\n                    if (fundDetail) {\n                        fundInfo.funds.push(fundDetail);\n                    }\n                }\n            }\n            if (fundInfo.funds.length > 0) {\n                this.allFunds = this.addFundInfo(fundInfo, this.allFunds)\n            }\n\n        }\n\n        this.allFunds.sort((a, b) => {\n            const x = a.company.toLowerCase();\n            const y = b.company.toLowerCase();\n            if (x < y) { return -1; }\n            if (x > y) { return 1; }\n            return 0;\n\n        })\n    }\n\n    public render() {\n        return (\n            <MemoryRouter>\n                <MenuAppBar />\n                <Container style={{marginTop: '5vh'}}>\n                    <Main funds={this.allFunds} />\n                </Container>\n            </MemoryRouter>\n        )\n    }\n\n    private addFundInfo(fundInfo: IFundInfo, fundInfos: IFundInfo[]): IFundInfo[] {\n        const index = fundInfos.findIndex((item) => {\n            return item.company === fundInfo.company\n        })\n        fundInfo.funds.sort((a, b) => {\n            const x = a.name.toLowerCase();\n            const y = b.name.toLowerCase();\n            if (x < y) { return -1; }\n            if (x > y) { return 1; }\n            return 0;\n        })\n        if (index >= 0) {\n            fundInfos[index].funds = fundInfos[index].funds.concat(fundInfo.funds)\n        } else {\n            fundInfos.push(fundInfo)\n        }\n        return fundInfos\n    }\n\n    private getFundDetails(elements: Element[]): IFundDetail | null {\n        const fundHeading = this.getFundNameAndValue(elements[0]);\n        const fund = new FundDetail(fundHeading.name!, fundHeading.currentValue!);\n\n        for (let index = elements.length - 1; index > 0; index--) {\n            const element = elements[index];\n            if (element.className === \"C\" || element.className === \"Y\") {\n                if (fund.yearlyPercentage) {\n                    fund.dailyPercentage = Number(element.innerHTML.trim())\n                } else {\n                    fund.yearlyPercentage = Number(element.innerHTML.trim())\n                }\n            }\n        }\n        return fund.yearlyPercentage ? fund : null\n    }\n\n    private getFundNameAndValue(element: Element): Partial<IFundDetail> {\n        const heading = element.innerHTML.trim()\n\n        // Special check for avoiding spans containing <a> elements with the integer part of the value we're looking for\n        const children = element.getElementsByTagName(\"a\")\n        if (children.length > 0) {\n            let pos = heading.length - 1\n            let decimals = heading.charAt(pos)\n            while (this.isNumeric(decimals) && pos >= 0) {\n                decimals = heading.charAt(--pos) + decimals;\n            }\n            const value = children[0].innerHTML + decimals.slice(1)\n            const aPos = heading.indexOf('<')\n            return {\n                name: heading.slice(0, aPos).trim(),\n                currentValue: Number(value)\n            }\n        }\n\n        let pos = heading.length - 1\n        let value = heading.charAt(pos)\n        while (this.isNumeric(value) && pos >= 0) {\n            value = heading.charAt(--pos) + value;\n        }\n        return {\n            name: heading.slice(0, pos + 1).trim(),\n            currentValue: Number(heading.slice(pos + 1, heading.length))\n        }\n    }\n\n    private isNumeric(value: any) {\n        if (value.slice(0, 1) === ' ') {\n            return false\n        }\n        var count = (value.match(/\\./g) || []).length;\n        if (count > 1) {\n            return false;\n        }\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { AppLoader } from './AppLoader';\n\nReactDOM.render(<div>\n    <AppLoader />\n</div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}